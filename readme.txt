=======================================================================================================
    Стек:
=======================================================================================================

    • git

  Backend:
    • Asp.Net Core
    • Entity Framework Core
    • Automapper
    • PostgreSQL (Code-first)

  Frontend:
    • нативный javascript

=======================================================================================================
    Реализация:
=======================================================================================================

Для реализации backend части приложения была выбрана Domain-ориентированныя архитектура.

Серверная часть приложения была разделена на проекты:

  • API (слой взаимодействия с backend'ом приложения. Контроллеры и регистрация в IOC-контейнере)
  • DAL (слой репозиториев для взаимодествия с БД)
  • PostgreSQL (хранение миграций отдельно для PostgreSQL)
  • Business (сервисы с бизнес логикой. Преобразование внешних моделей данных во внутренние (используемые
  на сервере))
  • Domain (хранит котракты для реализации слоёв DAL и Business, сущности для базы данных, и модели для
  общего пользования)
  • WebUI (хранит frontend приложения)

В рамках поставленной задачи были выделены следующие сущности для базы данных:

  • Product: (Id, Title, ProductTypeId, ProductSlotId )
      продукт, которыми может быть заполнен продуктовый контейнер помещаемый в автомат
  • ProductType: (Id, Title)
      тип продукта был выделен в отдельную сущность с целью иметь возможность более гибкую выборку 
      продуктов из БД
  • ProductSlot: (Id, ProductMachineId, Capacity, Price, ImageUrl)
      контейнер в которой могут помещаться продукты с одинаковым названием
  • ProductMachine: (Id, Capacity)
      предстовляет собой продуктовый автомат, который хранит в себе контейнеры с продукцией

Для API приложения реализован следующий функционал:

  • CRUD операции для каждой сущности
  • добавление слотой с продуктами в автомат, а также его отчистка
  • добавление продуктов в слот для их хранения, очистка, а также заполнение выбранного слота продуктами 
  (не использованными) по из названию

Для frontend'да приложения был использован чистый JavaScript.

На данном этапе описаны fetch-запросы для взаимодействия с API приложения.

=======================================================================================================
    Выполнение требований:
=======================================================================================================

  Требование:                                                            |   Backend     |    Frontend
--------------------------------------------------------------------------------------------------------
• Технические требования                                                 |      да       |        -
--------------------------------------------------------------------------------------------------------
• Администрировать ассортимент напитков: добавление, удаление напитков,  |      да       |       нет
  изменение их количества, стоимости и изображения                       |               |
--------------------------------------------------------------------------------------------------------
• Управлять монетами в автомате: изменение количества монет,             |       -       |       нет
  блокирование приема тех или иных монет                                 |               |
--------------------------------------------------------------------------------------------------------
• Доступ в административный интерфейс по секретному ключу, который       |       -       |       нет
  передаётся как параметр в адресной строке                              |               |
--------------------------------------------------------------------------------------------------------
• Необязательные требование также не были выполнены                      |       -       |       нет
--------------------------------------------------------------------------------------------------------

	Github: https://github.com/EvgeniyRuban/IntravisionTestTask/tree/frontend-dev